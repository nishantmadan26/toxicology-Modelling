colnames(df)<-conc
ggplot(stack(df), aes(x = 1, y = values)) +
geom_boxplot()
#boxplot(df,col = rainbow((unique(conc))))
#boxplot(y~x,data=df,col=rainbow(unique(conc)))
#y <- rnorm(0, 13, 2)
#ggplot(randomVPA, aes(x=concentrations, y=)) + geom_boxplot()
# boxplot(
#   y~concentrations,
#   data = randomVPA,
#   main = "Boxplot on entire dataset for each concentrations",
#   xlab = "Concentrations",
#   ylab = "frequency",
#   col = rainbow(unique(concentrations))
# )
df<- data.frame(randomVPA)
colnames(df)<-conc
ggplot(stack(df), aes(x = conc, y = values)) +
geom_boxplot()
#y <- rnorm(0, 13, 2)
#ggplot(randomVPA, aes(x=concentrations, y=)) + geom_boxplot()
# boxplot(
#   y~concentrations,
#   data = randomVPA,
#   main = "Boxplot on entire dataset for each concentrations",
#   xlab = "Concentrations",
#   ylab = "frequency",
#   col = rainbow(unique(concentrations))
# )
df<- data.frame(randomVPA)
colnames(df)<-conc
ggplot(stack(df), aes(x = x, y = y)) +
geom_boxplot()
#y <- rnorm(0, 13, 2)
#ggplot(randomVPA, aes(x=concentrations, y=)) + geom_boxplot()
# boxplot(
#   y~concentrations,
#   data = randomVPA,
#   main = "Boxplot on entire dataset for each concentrations",
#   xlab = "Concentrations",
#   ylab = "frequency",
#   col = rainbow(unique(concentrations))
# )
df<- data.frame(randomVPA)
colnames(df)<-conc
ggplot(stack(df)) +
geom_boxplot()
View(randomVPA)
#y <- rnorm(0, 13, 2)
#ggplot(randomVPA, aes(x=concentrations, y=)) + geom_boxplot()
# boxplot(
#   y~concentrations,
#   data = randomVPA,
#   main = "Boxplot on entire dataset for each concentrations",
#   xlab = "Concentrations",
#   ylab = "frequency",
#   col = rainbow(unique(concentrations))
# )
df<- data.frame(randomVPA)
colnames(df)<-conc
ggplot(stack(randomVPA), aes(x = x, y = y)) +
geom_boxplot()
#y <- rnorm(0, 13, 2)
#ggplot(randomVPA, aes(x=concentrations, y=)) + geom_boxplot()
# boxplot(
#   y~concentrations,
#   data = randomVPA,
#   main = "Boxplot on entire dataset for each concentrations",
#   xlab = "Concentrations",
#   ylab = "frequency",
#   col = rainbow(unique(concentrations))
# )
df<- data.frame(randomVPA)
colnames(df)<-conc
ggplot(stack(randomVPA), aes(x = conc, y = y)) +
geom_boxplot()
#y <- rnorm(0, 13, 2)
#ggplot(randomVPA, aes(x=concentrations, y=)) + geom_boxplot()
# boxplot(
#   y~concentrations,
#   data = randomVPA,
#   main = "Boxplot on entire dataset for each concentrations",
#   xlab = "Concentrations",
#   ylab = "frequency",
#   col = rainbow(unique(concentrations))
# )
df<- data.frame(randomVPA)
colnames(df)<-conc
ggplot(stack(randomVPA), aes(x = conc, y = y)) +
geom_boxplot()
#y <- rnorm(0, 13, 2)
#ggplot(randomVPA, aes(x=concentrations, y=)) + geom_boxplot()
# boxplot(
#   y~concentrations,
#   data = randomVPA,
#   main = "Boxplot on entire dataset for each concentrations",
#   xlab = "Concentrations",
#   ylab = "frequency",
#   col = rainbow(unique(concentrations))
# )
df<- data.frame(randomVPA)
colnames(df)<-conc
# ggplot(stack(randomVPA), aes(x = conc, y = y)) +
#   geom_boxplot()
#boxplot(df,col = rainbow((unique(conc))))
boxplot(rnorm(10*7)~conc,data=df,col=col=rainbow(length(unique(x))))
#y <- rnorm(0, 13, 2)
#ggplot(randomVPA, aes(x=concentrations, y=)) + geom_boxplot()
# boxplot(
#   y~concentrations,
#   data = randomVPA,
#   main = "Boxplot on entire dataset for each concentrations",
#   xlab = "Concentrations",
#   ylab = "frequency",
#   col = rainbow(unique(concentrations))
# )
df<- data.frame(randomVPA)
colnames(df)<-conc
# ggplot(stack(randomVPA), aes(x = conc, y = y)) +
#   geom_boxplot()
#boxplot(df,col = rainbow((unique(conc))))
boxplot(rnorm(10*7)~conc,data=df,col=rainbow(length(unique(x))))
#y <- rnorm(0, 13, 2)
#ggplot(randomVPA, aes(x=concentrations, y=)) + geom_boxplot()
# boxplot(
#   y~concentrations,
#   data = randomVPA,
#   main = "Boxplot on entire dataset for each concentrations",
#   xlab = "Concentrations",
#   ylab = "frequency",
#   col = rainbow(unique(concentrations))
# )
df<- data.frame(randomVPA)
colnames(df)<-conc
# ggplot(stack(randomVPA), aes(x = conc, y = y)) +
#   geom_boxplot()
#boxplot(df,col = rainbow((unique(conc))))
boxplot(rnorm(10*7)~conc,data=randomVPA,col=rainbow(length(unique(x))))
#y <- rnorm(0, 13, 2)
#ggplot(randomVPA, aes(x=concentrations, y=)) + geom_boxplot()
# boxplot(
#   y~concentrations,
#   data = randomVPA,
#   main = "Boxplot on entire dataset for each concentrations",
#   xlab = "Concentrations",
#   ylab = "frequency",
#   col = rainbow(unique(concentrations))
# )
df<- data.frame(randomVPA)
colnames(df)<-conc
# ggplot(stack(randomVPA), aes(x = conc, y = y)) +
#   geom_boxplot()
#boxplot(df,col = rainbow((unique(conc))))
boxplot(randomVPA,col=rainbow(length(unique(conc))))
#y <- rnorm(0, 13, 2)
#ggplot(randomVPA, aes(x=concentrations, y=)) + geom_boxplot()
# boxplot(
#   y~concentrations,
#   data = randomVPA,
#   main = "Boxplot on entire dataset for each concentrations",
#   xlab = "Concentrations",
#   ylab = "frequency",
#   col = rainbow(unique(concentrations))
# )
df<- data.frame(randomVPA)
colnames(df)<-conc
# ggplot(stack(randomVPA), aes(x = conc, y = y)) +
#   geom_boxplot()
#boxplot(df,col = rainbow((unique(conc))))
boxplot(df,col=rainbow(length(unique(conc))))
#y <- rnorm(0, 13, 2)
#ggplot(randomVPA, aes(x=concentrations, y=)) + geom_boxplot()
# boxplot(
#   y~concentrations,
#   data = randomVPA,
#   main = "Boxplot on entire dataset for each concentrations",
#   xlab = "Concentrations",
#   ylab = "frequency",
#   col = rainbow(unique(concentrations))
# )
df<- data.frame(randomVPA)
colnames(df)<-conc
# ggplot(stack(randomVPA), aes(x = conc, y = y)) +
#   geom_boxplot()
#boxplot(df,col = rainbow((unique(conc))))
boxplot(df,col=rainbow(unique(conc)))
#y <- rnorm(0, 13, 2)
#ggplot(randomVPA, aes(x=concentrations, y=)) + geom_boxplot()
# boxplot(
#   y~concentrations,
#   data = randomVPA,
#   main = "Boxplot on entire dataset for each concentrations",
#   xlab = "Concentrations",
#   ylab = "frequency",
#   col = rainbow(unique(concentrations))
# )
df<- data.frame(randomVPA)
colnames(df)<-conc
# ggplot(stack(randomVPA), aes(x = conc, y = y)) +
#   geom_boxplot()
#boxplot(df,col = rainbow((unique(conc))))
colors = c(rep("red",6),rep("orange",3),rep("lightgreen",3),rep("green",3),rep("lightblue",3),rep("blue",3),rep("purple",3),rep("pink",3))
boxplot(df,col=colors)
mean.per.conc <- t(apply(randomVPA, 1, function(x){
tapply(x, conc, mean)
}))
boxplot(mean.per.conc,col=rainbow(length(unique(conc))))
df<- data.frame(randomVPA)
colnames(df)<-conc
# colors = c(rep("red",6),rep("orange",3),rep("lightgreen",3),rep("green",3),rep("lightblue",3),rep("blue",3),rep("purple",3),rep("pink",3))
boxplot(df,col=col=rainbow(length(unique(conc))))
df<- data.frame(randomVPA)
colnames(df)<-conc
# colors = c(rep("red",6),rep("orange",3),rep("lightgreen",3),rep("green",3),rep("lightblue",3),rep("blue",3),rep("purple",3),rep("pink",3))
boxplot(df,col=rainbow(length(unique(conc))))
df<- data.frame(randomVPA)
colnames(df)<-conc
# colors = c(rep("red",6),rep("orange",3),rep("lightgreen",3),rep("green",3),rep("lightblue",3),rep("blue",3),rep("purple",3),rep("pink",3))
boxplot(df,col=rainbow(length(unique(x))))
df<- data.frame(randomVPA)
colnames(df)<-conc
colors = c(rep("red",6),rep("orange",3),rep("lightgreen",3),rep("green",3),rep("lightblue",3),rep("blue",3),rep("purple",3),rep("pink",3))
boxplot(df,col=colors)
monoton.increasing <- apply(mean.per.conc, 1, function(x){
all(diff(x) > 0)
})
sum(monoton.increasing)
monoton.decreasing <- apply(mean.per.conc, 1, function(x){
all(c(x[1]>x[2], x[2]>x[3], x[3]>x[4], x[4]>x[5], x[5]>x[6], x[6]>x[7], x[7]>x[8]))
})
sum(monoton.decreasing)
par(mfrow=c(5,2))
ind.mon <- which(monoton.increasing == TRUE)[1:10]
for(i in 1:10){
plot(conc, selectionVPA[i,], pch=16, col="grey",
xlab="Concentration", ylab="Gene expression value",
main = rownames(selectionVPA)[i])
points(unique(conc), mean.per.conc[i,], pch=16, col="black")
}
par(mfrow=c(5,2))
ind.mon <- which(monoton.increasing == TRUE)[1:10]
for(i in 1:10){
plot(conc, randomVPA[i,], pch=16, col="grey",
xlab="Concentration", ylab="Gene expression value",
main = rownames(selectionVPA)[i])
points(unique(conc), mean.per.conc[i,], pch=16, col="black")
}
par(mfrow = c(5, 2))
ind.mon <- which(monoton.increasing == TRUE)[1:10]
for (i in 1:10) {
plot(
conc,
randomVPA[i, ],
pch = 16,
col = "grey",
xlab = "Concentration",
ylab = "Gene expression value",
main = rownames(randomVPA)[i]
)
points(unique(conc),
mean.per.conc[i, ],
pch = 16,
col = "black")
}
ind.mon <- which(monoton.increasing == TRUE)[1:10]
for (i in 1:10) {
plot(
conc,
randomVPA[i, ],
pch = 16,
col = "grey",
xlab = "Concentration",
ylab = "Gene expression value",
main = rownames(randomVPA)[i]
)
points(unique(conc),
mean.per.conc[i, ],
pch = 16,
col = "black")
}
ind.mon <- which(monoton.increasing == TRUE)[1:10]
for (i in 1:10) {
plot(
conc,
randomVPA[i, ],
pch = 16,
col = "grey",
xlab = "Concentration",
ylab = "Gene expression value",
main = rownames(randomVPA)[i]
)
points(unique(conc),
mean.per.conc[i, ],
pch = 16,
col = "black")
}
ind.mon <- which(monoton.increasing == TRUE)[1:10]
for (i in 1:10) {
plot(
conc,
randomVPA[i, ],
pch = 16,
col = "grey",
xlab = "Concentration",
ylab = "Gene expression value",
main = rownames(randomVPA)[i]
)
points(unique(conc),
mean.per.conc[i, ],
pch = 16,
col = "black")
}
dec.mon <- which(monoton.decreasing == TRUE)[1:10]
for (i in dec.mon) {
plot(
conc,
randomVPA[i, ],
pch = 16,
col = "grey",
xlab = "Concentration",
ylab = "Gene expression value",
main = rownames(randomVPA)[i]
)
points(unique(conc),
mean.per.conc[i, ],
pch = 16,
col = "black")
}
inc.mon <- which(monoton.increasing == TRUE)
for (i in inc.mon) {
plot(
conc,
randomVPA[i, ],
pch = 16,
col = "grey",
xlab = "Concentration",
ylab = "Gene expression value",
main = rownames(randomVPA)[i]
)
points(unique(conc),
mean.per.conc[i, ],
pch = 16,
col = "black")
}
dec.mon <- which(monoton.decreasing == TRUE)
for (i in dec.mon) {
plot(
conc,
randomVPA[i, ],
pch = 16,
col = "grey",
xlab = "Concentration",
ylab = "Gene expression value",
main = rownames(randomVPA)[i]
)
points(unique(conc),
mean.per.conc[i, ],
pch = 16,
col = "black")
}
se.by.concentration.nocontrol <-
t(apply(randomVPA[, -(1:6)], 1, function(x) {
tapply(x, concentration[-(1:6)], function(y)
sd(y) / sqrt(3))
}))
concentration[-(1:6)]
library(ggplot2)
load("E:/TUD/04.Semester/toxicology-I/assignments/1/VPAData-Random.Rda")
concentration <- c(rep(0, 6), rep(c(25, 150, 350, 450, 550, 800, 1000), each=3))
concentrations = rep(unique(concentration), each = 10000)
library(ggplot2)
load("E:/TUD/04.Semester/toxicology-I/assignments/1/VPAData-Random.Rda")
concentration <- c(rep(0, 6), rep(c(25, 150, 350, 450, 550, 800, 1000), each=3))
concentrations = rep(unique(concentration), each = 10000)
df<- data.frame(randomVPA)
colnames(df)<-concentration
colors = c(rep("red",6),rep("orange",3),rep("lightgreen",3),rep("green",3),rep("lightblue",3),rep("blue",3),rep("purple",3),rep("pink",3))
boxplot(df,col=colors)
sd.by.concentrations <- t(apply(randomVPA, 1, function(x) {
tapply(x, concentration, sd)
}))
sd.df <- data.frame(sd = c(sd.by.concentrations),
concentration = concentrations)
ggplot(sd.df, aes(x = sd)) +
geom_histogram(bins = 100) +
facet_wrap(. ~ concentration) +
theme_bw() +
xlab("Standard Deviation of the replicates for each concentrations separately") +
ylab("Count")
se.by.concentration.nocontrol <-
t(apply(randomVPA[, -(1:6)], 1, function(x) {
tapply(x, concentration[-(1:6)], function(y)
sd(y) / sqrt(3))
}))
se.control <- apply(randomVPA[, 1:6], 1, function(y)
sd(y) / sqrt(6))
se.by.concentration <-
cbind(se.control, se.by.concentration.nocontrol)
se.df <- data.frame(se = c(se.by.concentration),
concentration = concentrations)
ggplot(se.df, aes(x = se)) +
geom_histogram(bins = 100) +
facet_wrap(. ~ concentration) +
theme_bw() +
xlab("Standard Error of the replicates for each concentrations separately") +
ylab("Count")
mean.per.concentration <- t(apply(randomVPA, 1, function(x){
tapply(x, concentration, mean)
}))
boxplot(mean.per.concentration,col=rainbow(length(unique(concentration))))
monoton.increasing <- apply(mean.per.concentration, 1, function(x){
all(diff(x) > 0)
})
sum(monoton.increasing)
monoton.decreasing <- apply(mean.per.concentration, 1, function(x){
all(c(x[1]>x[2], x[2]>x[3], x[3]>x[4], x[4]>x[5], x[5]>x[6], x[6]>x[7], x[7]>x[8]))
})
sum(monoton.decreasing)
inc.mon <- which(monoton.increasing == TRUE)
for (i in inc.mon) {
plot(
concentration,
randomVPA[i, ],
pch = 16,
col = "grey",
xlab = "concentrations",
ylab = "Gene expression value",
main = rownames(randomVPA)[i]
)
points(unique(concentration),
mean.per.concentration[i, ],
pch = 16,
col = "black")
}
dec.mon <- which(monoton.decreasing == TRUE)
for (i in dec.mon) {
plot(
concentration,
randomVPA[i, ],
pch = 16,
col = "grey",
xlab = "concentrationentration",
ylab = "Gene expression value",
main = rownames(randomVPA)[i]
)
points(unique(concentration),
mean.per.concentration[i, ],
pch = 16,
col = "black")
}
foldchanges <- t(apply(mean.per.concentration, 1, function(x){
x[2:8] - x[1]
}))
foldchanges.df <- data.frame(
FC = c(foldchanges[,1], foldchanges[,2], foldchanges[,3], foldchanges[,4],
foldchanges[,5], foldchanges[,6], foldchanges[,7]),
concentration = rep(unique(concentration)[-1], each=10000)
)
p.foldchange <- ggplot(foldchanges.df, aes(x=FC)) +
geom_histogram(bins=150) +
facet_wrap(.~concentration, scales="free_y") +
theme_bw() +
xlab("Mean difference in gene expression to control") +
ylab("Count")
p.foldchange
p.foldchange + xlim(-2, 2)
f.change <- t(apply(mean.per.concentration, 1, function(x){
x[2:8] - x[1]
}))
f.change.df <- data.frame(
FC = c(f.change[,1], f.change[,2], f.change[,3], f.change[,4],
f.change[,5], f.change[,6], f.change[,7]),
concentration = rep(unique(concentration)[-1], each=10000)
)
p.foldchange <- ggplot(f.change.df, aes(x=FC)) +
geom_histogram(bins=150) +
facet_wrap(.~concentration, scales="free_y") +
theme_bw() +
xlab("Mean difference in gene expression to control") +
ylab("Count")
p.foldchange
unique(concentration)[-1]
p.foldchange + xlim(-2, 2)
ggplot(f.change.df, aes(x=FC)) +
geom_histogram(bins=150) +
facet_wrap(.~concentration, scales="free_y") +
theme_bw() +
xlab("Mean difference in gene expression to control") +
ylab("Count") + xlim(-2, 2)
ggplot(f.change.df, aes(x = FC)) +
geom_histogram(bins = 150) +
facet_wrap(. ~ concentration, scales = "free_y") +
theme_bw() +
xlab("Mean difference in gene expression to control") +
ylab("Count") + xlim(-2, 2)
mean.per.concentration <- t(apply(randomVPA, 1, function(x) {
tapply(x, concentration, mean)
}))
boxplot(mean.per.concentration, col = rainbow(length(unique(concentration))))
df <- data.frame(randomVPA)
colnames(df) <- concentration
colors = c(
rep("red", 6),
rep("orange", 3),
rep("lightgreen", 3),
rep("green", 3),
rep("lightblue", 3),
rep("blue", 3),
rep("purple", 3),
rep("pink", 3)
)
boxplot(df, col = colors)
